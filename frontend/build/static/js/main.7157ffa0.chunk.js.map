{"version":3,"sources":["constants.js","ElectionList.js","components/ScrollTextLand.js","Landing.js","Home.js","faq/index.js","GetCommittedAmount.js","statics/TopNavigationBar.js","statics/BottomNavigationBar.js","MainPage.js","store/reducers.js","store/stores.js","statics/AlertModal.js","App.js","index.js"],"names":["ASSET_ID","ADDRESS_1","ADDRESS_2","URL","ELECTION_ID","ElectionList","dispatch","useDispatch","useState","address1","setAddress1","address2","setAddress2","useQuery","axios","get","then","response","data","isLoading","error","darkTheme","useSelector","state","status","algodClient","algosdk","Algodv2","walletType","localStorage","getItem","isThereAddress","election_data","candidates","address","image","name","card_desc","choice_per_vote","created_at","description","is_finished","is_started","process_image","slug","title","wallet","myAlgoConnect","voteData","a","myAlgoWallet","MyAlgoConnect","connect","shouldSelectOneAccount","accounts","accountInformation","do","myAccountInfo","balance","assets","find","element","amount","containsChoice","some","length","type","alertContent","getTransactionParams","suggestedParams","amountToSend","txn","makeAssetTransferTxnWithSuggestedParamsFromObject","from","to","assetIndex","signTransaction","toByte","signedTxn","sendRawTransaction","blob","setTimeout","window","location","reload","message","algoSignerConnect","AlgoSigner","open","ledger","signTxn","encoding","msgpackToBase64","base64ToMsgpack","algoMobileConnect","connector","WalletConnect","bridge","qrcodeModal","QRCodeModal","alert","txnsToSign","Buffer","encodeUnsignedTransaction","toString","requestParams","request","formatJsonRpcRequest","sendCustomRequest","result","decodedResult","map","Uint8Array","console","log","className","style","width","height","display","alignItems","flexDirection","color","textAlign","fontSize","fontWeight","textTransform","opacity","margin","size","speedMultiplier","index","src","alt","paddingLeft","paddingBottom","min","placeholder","item","value","onClick","e","election","voteVal","$","target","closest","val","amt","ScrollTextLand","word","wordSpacing","padding","borderBottom","Landing","id","Home","Faq","class","que","ans","toggleClass","content","css","maxHeight","scrollHeight","href","GetCommittedAmount","addressNum","walletAddress","userAddress","split","Amt","setAmt","getIt","useEffect","TopNavigationBar","NavLink","isWalletConnected","useWindowSize","setBalance","addresses","addrArr","forEach","bal","push","addressIndex","addr","setItem","justifyContent","text","undefined","connected","createSession","on","payload","params","letterSpacing","background","borderTop","isActive","removeItem","BottomNavigationBar","borderRadius","border","cursor","MainPage","top","left","right","bottom","position","pointerEvents","path","combineReducers","alertModal","openModal","modalContent","electModal","openElectModal","modalData","voteModal","openModalVote","action","store","createStore","rootReducer","AlertModal","marginRight","minHeight","lineHeight","marginBottom","App","queryClient","QueryClient","fallback","stores","client","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7157ffa0.chunk.js","sourcesContent":["//Replace the \"constants.js\" with this in order to run on MainNet\nconst ASSET_ID = 297995609;\nconst ADDRESS_1 = \"JADVKUYQ72Z3LNDNQ3VFTXGAG6PPPQWN3QPI6CQTF3G4DVNP3TWJAI5UPI\";\nconst ADDRESS_2 = \"M2VNOIOSE4KQ25XXFP3EQHUAQWINOEKY6HURCYUO2I6OJUQH3DAAZLGSPY\";\nconst URL = \"https://choice-coin-api.herokuapp.com\";\nconst ELECTION_ID = \"726a8c6c-6cf7-42cc-8a48-4525c55c3f61\";\nexport { ASSET_ID, URL, ELECTION_ID, ADDRESS_1, ADDRESS_2 };\n","//Replace the \"ElectionList.js\" file with this in order to convert to MainNet\n//Make sure to replace the blank strings with actual addresses before\nimport $ from \"jquery\";\nimport axios from \"axios\";\nimport algosdk from \"algosdk\";\nimport { useState } from \"react\";\nimport \"./styles/electionlist.css\";\nimport { useQuery } from \"react-query\";\nimport BarLoader from \"react-spinners/BarLoader\";\nimport WalletConnect from \"@walletconnect/client\";\nimport MyAlgoConnect from \"@randlabs/myalgo-connect\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { formatJsonRpcRequest } from \"@json-rpc-tools/utils\";\nimport QRCodeModal from \"algorand-walletconnect-qrcode-modal\";\nimport { ASSET_ID, ELECTION_ID, URL, ADDRESS_1, ADDRESS_2 } from \"./constants\";\n\nconst ElectionList = () => {\n  const dispatch = useDispatch();\n\n  const [address1, setAddress1] = useState(0);\n  const [address2, setAddress2] = useState(0);\n\n  const { isLoading, error, data } = useQuery(\"elections\", () =>\n    axios.get(`${URL}/results/${ELECTION_ID}`).then((response) => {\n      if (response?.data?.data) {\n        setAddress1(response?.data?.data[ADDRESS_1]);\n        setAddress2(response?.data?.data[ADDRESS_2]);\n      }\n    })\n  );\n\n  const darkTheme = useSelector((state) => state.status.darkTheme);\n\n  const algodClient = new algosdk.Algodv2(\n  {\n    \"X-API-Key\": \"5iDNC5wssQ2e2SWgaY1XH2FOnlQZG2v28JPUkD1L\",\n  },\n  \"https://mainnet-algorand.api.purestake.io/ps2\",\n  \"\"\n);\n\n  const walletType = localStorage.getItem(\"wallet-type\");\n  const isThereAddress = localStorage.getItem(\"address\");\n\n  const election_data = [\n    {\n      candidates: [\n        {\n          address: \"JADVKUYQ72Z3LNDNQ3VFTXGAG6PPPQWN3QPI6CQTF3G4DVNP3TWJAI5UPI\",\n          image: \"\",\n          name: \"Option 1: The Choice Coin DAO will donate 15,000.00 Choice to Chess in Slums and Beyond Compass. The Choice Coin DAO will donate 25,000.00 Choice to Future Hopes International and Fearless Drive Foundation.\",\n        },\n\n        {\n          address: \"M2VNOIOSE4KQ25XXFP3EQHUAQWINOEKY6HURCYUO2I6OJUQH3DAAZLGSPY\",\n          image: \"\",\n          name: \"Option 2: The Choice Coin DAO will donate 25,000.00 Choice to Chess in Slums and Beyond Compass. The Choice Coin DAO will donate 15,000.00 Choice to Future Hopes International and Fearless Drive Foundation.\",\n        },\n      ],\n      card_desc:\n        \"This Issue addresses Choice Charities, an initiative focused on charitable contributions from the DAO. This Issue has two options.\",\n      choice_per_vote: 1,\n      created_at: \"2021-12-08T10:32:15.878473\",\n      description: \"Lorem ipsum\",\n      is_finished: false,\n      is_started: true,\n      process_image: \"https://i.postimg.cc/90XSyrjH/choice.png\",\n      slug: \"is-choice-coin-the-best-b0c7db\",\n      title: \"Choice Charities\",\n      wallet: {\n        address: \"NX4T2FTIGNPVPSMEXJFMMKD46O4HRCPN25BDHOUW2SWXANZPQBZEDYKDVE\",\n      },\n    },\n  ];\n\n  const myAlgoConnect = async (voteData) => {\n    const myAlgoWallet = new MyAlgoConnect();\n\n    try {\n      const accounts = await myAlgoWallet.connect({\n        shouldSelectOneAccount: true,\n      });\n      const address = !!isThereAddress ? isThereAddress : accounts[0].address;\n\n      const myAccountInfo = await algodClient\n        .accountInformation(\n          !!isThereAddress ? isThereAddress : accounts[0].address\n        )\n        .do();\n\n      // get balance of the voter\n      const balance = myAccountInfo.assets\n        ? myAccountInfo.assets.find(\n            (element) => element[\"asset-id\"] === ASSET_ID\n          ).amount / 100\n        : 0;\n\n      // check if the voter address has Choice\n      const containsChoice = myAccountInfo.assets\n        ? myAccountInfo.assets.some(\n            (element) => element[\"asset-id\"] === ASSET_ID\n          )\n        : false;\n\n      // if the address has no ASAs\n      if (myAccountInfo.assets.length === 0) {\n        dispatch({\n          type: \"alert_modal\",\n          alertContent: \"You need to opt-in to Choice Coin in your Algorand Wallet.\",\n        });\n        return;\n      }\n\n      if (!containsChoice) {\n        dispatch({\n          type: \"alert_modal\",\n          alertContent: \"You need to opt-in to Choice Coin in your Algorand Wallet.\",\n        });\n        return;\n      }\n\n      if (voteData.amount > balance) {\n        dispatch({\n          type: \"alert_modal\",\n          alertContent:\n            \"You do not have sufficient balance to make this transaction.\",\n        });\n        return;\n      }\n\n      const suggestedParams = await algodClient.getTransactionParams().do();\n      const amountToSend = voteData.amount * 100;\n\n      const txn = algosdk.makeAssetTransferTxnWithSuggestedParamsFromObject({\n        from: address,\n        to: voteData.address,\n        amount: amountToSend,\n        assetIndex: ASSET_ID,\n        suggestedParams,\n      });\n\n      const signedTxn = await myAlgoWallet.signTransaction(txn.toByte());\n      await algodClient.sendRawTransaction(signedTxn.blob).do();\n\n      // alert success\n      dispatch({\n        type: \"alert_modal\",\n        alertContent:\n          \"Your vote has been recorded.\",\n      });\n      setTimeout(() => window.location.reload(), 1500);\n    } catch (error) {\n      if (error.message === \"Can not open popup window - blocked\") {\n        dispatch({\n          type: \"alert_modal\",\n          alertContent:\n            \"Pop Up windows blocked by your browser. Enable pop ups to continue.\",\n        });\n      } else {\n        dispatch({\n          type: \"alert_modal\",\n          alertContent: \"An error occured the during transaction process\",\n        });\n      }\n    }\n  };\n\n  const algoSignerConnect = async (voteData) => {\n    try {\n      if (typeof window.AlgoSigner === \"undefined\") {\n        window.open(\n          \"https://chrome.google.com/webstore/detail/algosigner/kmmolakhbgdlpkjkcjkebenjheonagdm\",\n          \"_blank\"\n        );\n      } else {\n        await window.AlgoSigner.connect({\n          ledger: \"MainNet\",\n        });\n        const accounts = await window.AlgoSigner.accounts({\n          ledger: \"MainNet\",\n        });\n\n        const address = !!isThereAddress ? isThereAddress : accounts[0].address;\n\n        const myAccountInfo = await algodClient\n          .accountInformation(\n            !!isThereAddress ? isThereAddress : accounts[0].address\n          )\n          .do();\n\n        // get balance of the voter\n        const balance = myAccountInfo.assets\n          ? myAccountInfo.assets.find(\n              (element) => element[\"asset-id\"] === ASSET_ID\n            ).amount / 100\n          : 0;\n\n        // check if the voter address has Choice\n        const containsChoice = myAccountInfo.assets\n          ? myAccountInfo.assets.some(\n              (element) => element[\"asset-id\"] === ASSET_ID\n            )\n          : false;\n\n        // if the address has no ASAs\n        if (myAccountInfo.assets.length === 0) {\n          dispatch({\n            type: \"alert_modal\",\n            alertContent: \"You need to opt-in to Choice Coin in your Algorand Wallet.\",\n          });\n          return;\n        }\n\n        if (!containsChoice) {\n          dispatch({\n            type: \"alert_modal\",\n            alertContent: \"You need to opt-in to Choice Coin in your Algorand Wallet.\",\n          });\n          return;\n        }\n\n        if (voteData.amount > balance) {\n          dispatch({\n            type: \"alert_modal\",\n            alertContent:\n              \"You do not have sufficient balance to make this transaction.\",\n          });\n          return;\n        }\n\n        const suggestedParams = await algodClient.getTransactionParams().do();\n        const amountToSend = voteData.amount * 100;\n\n        const txn = algosdk.makeAssetTransferTxnWithSuggestedParamsFromObject({\n          from: address,\n          to: voteData.address,\n          amount: amountToSend,\n          assetIndex: ASSET_ID,\n          suggestedParams,\n        });\n\n        const signedTxn = await window.AlgoSigner.signTxn([\n          { txn: window.AlgoSigner.encoding.msgpackToBase64(txn.toByte()) },\n        ]);\n        await algodClient\n          .sendRawTransaction(\n            window.AlgoSigner.encoding.base64ToMsgpack(signedTxn[0].blob)\n          )\n          .do();\n\n        // alert success\n        dispatch({\n          type: \"alert_modal\",\n          alertContent:\n            \"Your vote has been recorded.\",\n        });\n        setTimeout(() => window.location.reload(), 1500);\n      }\n    } catch (error) {\n      if (error.message === \"Can not open popup window - blocked\") {\n        dispatch({\n          type: \"alert_modal\",\n          alertContent:\n            \"Pop Up windows blocked by your browser. Enable pop ups to continue.\",\n        });\n      } else {\n        dispatch({\n          type: \"alert_modal\",\n          alertContent: \"An error occured the during transaction process\",\n        });\n      }\n    }\n  };\n\n  const algoMobileConnect = async (voteData) => {\n    const connector = new WalletConnect({\n      bridge: \"https://bridge.walletconnect.org\",\n      qrcodeModal: QRCodeModal,\n    });\n\n    try {\n      const address = !!isThereAddress ? isThereAddress : \"\";\n\n      const myAccountInfo = await algodClient.accountInformation(address).do();\n\n      const balance = myAccountInfo.assets\n        ? myAccountInfo.assets.find(\n            (element) => element[\"asset-id\"] === ASSET_ID\n          ).amount / 100\n        : 0;\n\n      const containsChoice = myAccountInfo.assets\n        ? myAccountInfo.assets.some(\n            (element) => element[\"asset-id\"] === ASSET_ID\n          )\n        : false;\n\n      if (myAccountInfo.assets.length === 0) {\n        alert(\"You need to opt-in to Choice Coin in your Algorand Wallet.\");\n        return;\n      }\n\n      if (!containsChoice) {\n        alert(\"You need to opt-in to Choice Coin in your Algorand Wallet.\");\n        return;\n      }\n\n      if (voteData.amount > balance) {\n        alert(\"You do not have sufficient balance to make this transaction.\");\n        return;\n      }\n\n      const suggestedParams = await algodClient.getTransactionParams().do();\n      const amountToSend = voteData.amount * 100;\n\n      const txn = algosdk.makeAssetTransferTxnWithSuggestedParamsFromObject({\n        from: address,\n        to: voteData.address,\n        amount: amountToSend,\n        assetIndex: ASSET_ID,\n        suggestedParams,\n      });\n\n      const txnsToSign = [\n        {\n          txn: Buffer.from(algosdk.encodeUnsignedTransaction(txn)).toString(\n            \"base64\"\n          ),\n          message: \"Transaction using Mobile Wallet\",\n        },\n      ];\n\n      const requestParams = [txnsToSign];\n\n      const request = formatJsonRpcRequest(\"algo_signTxn\", requestParams);\n      const result = await connector.sendCustomRequest(request);\n\n      const decodedResult = result.map((element) => {\n        return element ? new Uint8Array(Buffer.from(element, \"base64\")) : null;\n      });\n\n      console.log(decodedResult);\n      await algodClient.sendRawTransaction(decodedResult).do();\n      // alert success\n      dispatch({\n        type: \"alert_modal\",\n        alertContent:\n          \"Your vote has been recorded.\",\n      });\n      setTimeout(() => window.location.reload(), 1500);\n    } catch (error) {\n      if (error.message === \"Can not open popup window - blocked\") {\n        dispatch({\n          type: \"alert_modal\",\n          alertContent:\n            \"Pop Up windows blocked by your browser. Enable pop ups to continue.\",\n        });\n      } else {\n        dispatch({\n          type: \"alert_modal\",\n          alertContent: \"An error occured during the transaction process\",\n        });\n      }\n    }\n  };\n\n  const placeVote = (address, amount, election) => {\n    if (!address) {\n      dispatch({\n        type: \"alert_modal\",\n        alertContent: \"Select an option to vote!!\",\n      });\n      return;\n    }\n\n    if (walletType === \"my-algo\") {\n      myAlgoConnect({ address, amount, election });\n    } else if (walletType === \"algosigner\") {\n      algoSignerConnect({ address, amount, election });\n    } else if (walletType === \"walletconnect\") {\n      algoMobileConnect({ address, amount, election });\n    }\n  };\n\n  if (isLoading)\n    return (\n      <div className=\"ptt_elt\">\n        <div className=\"ptt_elt_inn\">\n          <div className=\"ptt_hd\">\n            <p>Vote 1: Choice Charities</p>\n          </div>\n\n          <ul className=\"card_list\">\n            <div\n              style={{\n                width: \"100%\",\n                height: \"100%\",\n                display: \"flex\",\n                alignItems: \"center\",\n                flexDirection: \"column\",\n                color: \"var(--wht)\",\n                textAlign: \"center\",\n                fontSize: \"14px\",\n                fontWeight: darkTheme ? 400 : 500,\n                textTransform: \"uppercase\",\n              }}\n            >\n              <p style={{ opacity: 0.8, margin: \"30px 0px 20px\" }}>Loading</p>\n              <BarLoader\n                color={darkTheme ? \"#eee\" : \"#888\"}\n                size={150}\n                speedMultiplier=\"0.5\"\n              />\n            </div>\n          </ul>\n        </div>\n      </div>\n    );\n  if (error) return \"An error has occurred: \" + error.message;\n\n  return (\n    <div className=\"ptt_elt\">\n      <div className=\"ptt_elt_inn\">\n        <div className=\"ptt_hd\">\n          <p>Vote 1: Choice Charities</p>\n        </div>\n\n        <ul className=\"card_list\">\n          {election_data?.map((slug, index) => {\n            return (\n              <div className=\"card_cont\" key={index}>\n                <div className=\"card_r1\">\n                  <div\n                    style={{\n                      display: \"flex\",\n                      flexDirection: \"row\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <div className=\"card_elt_img\">\n                      {slug.process_image ? (\n                        <img src={slug.process_image} alt=\"\" />\n                      ) : (\n                        <i\n                          className=\"uil uil-asterisk\"\n                          style={{ paddingLeft: \"2px\", paddingBottom: \"2px\" }}\n                        />\n                      )}\n                    </div>\n                    <div className=\"card_elt_tit\">{slug.title}</div>\n                  </div>\n                </div>\n\n                <div className=\"card_elt_desc\">{slug?.card_desc}</div>\n\n                <div className=\"voting_ends\">\n                  Voting ends: Janurary 27th, 2022, 5:00PM EST\n                </div>\n\n                <div className=\"results\">\n                  <div className=\"resultsTit\">Results</div>\n\n                  <div className=\"results_cont\">\n                    <div className=\"optionButt\">\n                      <div className=\"optionButtDets\">\n                        <p>Option 1</p>\n                        <p>{address1} Choice</p>\n                      </div>\n                      <div className=\"optRange\">\n                        <div\n                          className=\"optRangeSlide optRangeSlide1\"\n                          style={{\n                            width: `calc(100% * ${\n                              address1 / (address1 + address2)\n                            })`,\n                          }}\n                        ></div>\n                      </div>\n                    </div>\n                    <div className=\"optionButt\">\n                      <div className=\"optionButtDets\">\n                        <p>Option 2</p>\n                        <p>{address2} Choice</p>\n                      </div>\n                      <div className=\"optRange\">\n                        <div\n                          className=\"optRangeSlide optRangeSlide2\"\n                          style={{\n                            width: `calc(100% * ${\n                              address2 / (address1 + address2)\n                            })`,\n                          }}\n                        ></div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"card_cand\">\n                  <div className=\"card_cand_hd\">\n                    <div className=\"amountToCommit\">\n                      <p>Amount to commit:</p>\n                      <input\n                        type=\"number\"\n                        min=\"0\"\n                        placeholder=\"1\"\n                        className=\"amtToCommitInp\"\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"vote_collap\">\n                    <div className=\"card_cand_hd\">Options</div>\n                    <ul className=\"vote_now_list\">\n                      {slug?.candidates?.map((item, index) => {\n                        return (\n                          <li key={index}>\n                            <input\n                              type=\"radio\"\n                              name=\"options\"\n                              value={item.address}\n                            />\n\n                            <p>{item.name}</p>\n                          </li>\n                        );\n                      })}\n                    </ul>\n\n                    <div className=\"rec_vote_cont\">\n                      <button\n                        className=\"record_vote\"\n                        onClick={(e) => {\n                          var voteVal = $(e.target)\n                            .closest(\".card_cand\")\n                            .find(\".vote_now_list\");\n\n                          var amountToSend = $(e.target)\n                            .closest(\".card_cand\")\n                            .find(\".amtToCommitInp\")\n                            .val();\n\n                          var amt = !!amountToSend\n                            ? amountToSend\n                            : slug.choice_per_vote;\n\n                          placeVote(\n                            $(\"input[name=options]:checked\", voteVal).val(),\n                            amt,\n                            slug\n                          );\n                        }}\n                      >\n                        Submit Vote <i className=\"uil uil-mailbox\"></i>\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default ElectionList;\n","const ScrollTextLand = ({ word }) => {\n  return (\n    <div className=\"Marquee__Wrapper\">\n      <div className=\"Marquee__TextHolder\">\n        <div className=\"Marquee__TextGroup\">\n          <p\n            style={{\n              width: \"100%\",\n              fontSize: \"12px\",\n              fontWeight: \"500\",\n              wordSpacing: \"4px\",\n              padding: \"20px 0px\",\n              textTransform: \"uppercase\",\n              // borderTop: \"1px solid var(--border-default)\",\n              borderBottom: \"1px solid var(--border-default)\",\n            }}\n          >\n            {word}\n            <span className=\"Marquee__Dot\"></span>\n          </p>\n        </div>\n\n        <div className=\"Marquee__TextGroup\">\n          <p\n            style={{\n              width: \"100%\",\n              fontSize: \"12px\",\n              fontWeight: \"500\",\n              wordSpacing: \"4px\",\n              padding: \"20px 0px\",\n              textTransform: \"uppercase\",\n              // borderTop: \"1px solid var(--border-default)\",\n              borderBottom: \"1px solid var(--border-default)\",\n            }}\n          >\n            {word}\n            <span className=\"Marquee__Dot\"></span>\n          </p>\n        </div>\n        <div className=\"Marquee__TextGroup\">\n          <p\n            style={{\n              width: \"100%\",\n              fontSize: \"12px\",\n              fontWeight: \"500\",\n              wordSpacing: \"4px\",\n              padding: \"20px 0px\",\n              textTransform: \"uppercase\",\n              // borderTop: \"1px solid var(--border-default)\",\n              borderBottom: \"1px solid var(--border-default)\",\n            }}\n          >\n            {word}\n            <span className=\"Marquee__Dot\"></span>\n          </p>\n        </div>\n        <div className=\"Marquee__TextGroup\">\n          <p\n            style={{\n              width: \"100%\",\n              fontSize: \"12px\",\n              fontWeight: \"500\",\n              wordSpacing: \"4px\",\n              padding: \"20px 0px\",\n              textTransform: \"uppercase\",\n              // borderTop: \"1px solid var(--border-default)\",\n              borderBottom: \"1px solid var(--border-default)\",\n            }}\n          >\n            {word}\n            <span className=\"Marquee__Dot\"></span>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default ScrollTextLand;\n","import \"./styles/landing.css\";\nimport ScrollTextLand from \"./components/ScrollTextLand\";\n\nconst Landing = () => {\n  return (\n    <div className=\"landing\" id=\"landing\">\n      <ScrollTextLand\n        word={\n          \"Join our Discord Server to learn more and participate in our Open Source Rewards Programs!\"\n        }\n      />\n\n      <div className=\"land_cov\">\n        <div className=\"land_item1\">\n          <p className=\"hdy\">\n            Choice Coin DAO: Bringing Decentralized Governance to the Algorand\n            Blockchain\n          </p>\n          <p className=\"suby\">\n            Choice Coin is an Algorand Standard Asset (ASA) that powers the\n            Choice Coin DAO, a Decentralized Autonomous Organization built on\n            the Algorand Blockchain. The Choice Coin DAO aims to make\n            decentralized voting a reality through allocations to open-source\n            software development and community awareness.\n            <br />\n            <br />\n      Decentralized Decisions is an open source software platform for decentralized voting and governance. With over 75 contributors on GitHub, it is also the largest open source software project on the Algorand blockchain. The goal for Choice Coin is to help solve the decentralized governance problem by building the world’s best voting technology. Choice Coin is built, developed, and maintained by the Choice Coin DAO, a decentralized autonomous organization on the Algorand blockchain. Vote 1 is the second vote for the Choice Coin DAO.\n          </p>\n        </div>\n        <div className=\"land_item1\">\n          <b>\n            {\" \"}\n            <h3>Rules</h3>\n          </b>\n\n          <ul\n            className=\"suby\"\n            style={{ display: \"flex\", flexDirection: \"column\" }}\n          >\n            <li>1. One Choice is equal to one vote.</li>\n            <li>2. You can vote as many times as you desire.</li>\n            <li>\n              {\" \"}\n              3. There are no limits on how much Choice you can use to vote.\n            </li>\n            <li>\n              4. Any Choice sent after the voting deadline, Thursday Janurary\n              27th at 5:00PM will not count, will not be rewarded, and will not\n              be returned.\n            </li>\n            <li> 5. All votes are final.</li>\n          </ul>\n        </div>\n        <div className=\"land_item1\">\n          <h3>Rewards</h3>\n          <p className=\"suby\">\n        The rewards pool for Vote 1 will be tripled from Vote 0. If up to 3,000,000.00 Choice is committed to vote, then the reward pool will be 1,800,000.00 Choice. If up to 6,000,000.00 Choice is committed to vote, then the reward pool will be 3,000,000.00 Choice. If over 6,000,000.00 Choice is committed to vote, then the reward pool will be 4,200,000.00 Choice. The rewards will be distributed proportionally to all voters.\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Landing;\n","import Landing from \"./Landing\";\n\nconst Home = () => {\n  return (\n    <>\n      <Landing />\n    </>\n  );\n};\n\nexport default Home;\n","import $ from \"jquery\";\nimport \"../styles/faq.css\";\n\nconst Faq = () => {\n  return (\n    <div className=\"faq_cont\">\n    <div className=\"faq_cont_inn\">\n      <div className=\"faq_hd\">\n        <p>\n          <i class=\"uil uil-question-circle\"></i> Frequently Asked Questions\n        </p>\n      </div>\n\n      {[\n        {\n          que: \"What is Choice?\",\n          ans: \"Choice is the governance token for the Choice Coin DAO. Holders of Choice Coin can vote on various issues within the Choice Coin DAO by committing their Choice Coin during Goverance.\",\n        },\n        {\n          que: \"What is the Choice Coin DAO?\",\n          ans: \"The Choice Coin DAO is a Decentralized Autonomous Organization working to make decentralized voting a reality. The Choice Coin DAO hopes to bring voting to the Algorand Blockchain by allocating the Choice Coin asset to open-source software development, awareness campaigns, and more. Join the Choice Coin Discord to learn more.\",\n        },\n        {\n          que: \"What is Choice Coin?\",\n          ans: \"Choice Coin is an open source governance platform on the Algorand blockchain.\",\n        },\n        {\n          que: \"What is Algorand?\",\n          ans: \"Algorand is a secure, scalable, and decentralized blockchain. The Algorand platform supports smart contract functionality, and its consensus algorithm is based on proof-of-stake principles and a Byzantine Agreement protocol. Algorand's native cryptocurrency is called Algo.\",\n        },\n      ].map((item) => (\n        <div className=\"collap_cov\">\n          <button\n            className=\"collapsible\"\n            onClick={(e) => {\n              $(e.target).toggleClass(\"colap_active\");\n\n              var content = $(e.target)\n                .closest(\".collap_cov\")\n                .find(\".collap_cont\");\n\n              if (!!content.height()) {\n                content.css({\n                  maxHeight: \"0px\",\n                });\n              } else {\n                content.css({\n                  maxHeight: content.get(0).scrollHeight + \"px\",\n                });\n              }\n            }}\n          >\n            <p>{item.que}</p>\n          </button>\n          <div className=\"collap_cont\">\n            <p>{item.ans}</p>\n          </div>\n        </div>\n      ))}\n\n      <div className=\"ask_q_sect\">\n        <button className=\"ask_que\">\n          <p>\n            <a href = \"https://discord.gg/YNAbfB4WEy\">Ask a question or contribute by joining our Discord</a>{\" \"}\n            <i class=\"uil uil-arrow-up-right\"></i>\n          </p>\n        </button>\n      </div>\n    </div>\n  </div>\n);\n};\n\nexport default Faq;\n","import axios from \"axios\";\nimport { URL } from \"./constants\";\nimport { useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\n\nconst GetCommittedAmount = () => {\n  const addressNum = useSelector((state) => state.status.addressNum);\n  const walletAddress = localStorage.getItem(\"address\");\n  const userAddress = !!walletAddress\n    ? walletAddress\n    : localStorage.getItem(\"addresses\").split(\",\")[addressNum];\n\n  const [Amt, setAmt] = useState(0);\n\n  const getIt = async () => {\n    try {\n      if (!!userAddress) {\n        axios.get(`${URL}/committed/${userAddress}`).then((response) => {\n          if (!!response?.data?.data?.amount) {\n            setAmt(response.data.data.amount);\n          }\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getIt();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [userAddress]);\n\n  return <>{Amt}</>;\n};\n\nexport default GetCommittedAmount;\n","import algosdk from \"algosdk\";\nimport { ASSET_ID } from \"../constants\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport MyAlgoConnect from \"@randlabs/myalgo-connect\";\nimport { useWindowSize } from \"@react-hook/window-size\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport GetCommittedAmount from \"../GetCommittedAmount\";\n\nimport WalletConnect from \"@walletconnect/client\";\nimport QRCodeModal from \"algorand-walletconnect-qrcode-modal\";\n\nconst TopNavigationBar = ({ darkTheme, NavLink }) => {\n  const dispatch = useDispatch();\n\n  const addressNum = useSelector((state) => state.status.addressNum);\n  const isWalletConnected =\n    localStorage.getItem(\"wallet-type\") === null ? false : true;\n\n  const LogOut = () => {\n    localStorage.removeItem(\"address\");\n    localStorage.removeItem(\"addresses\");\n    localStorage.removeItem(\"wallet-type\");\n    localStorage.removeItem(\"walletconnect\");\n    window.location.reload();\n    console.log(\"data\");\n  };\n\n  const setMode = () => {\n    if (!darkTheme) {\n      localStorage.setItem(\"mode\", \"dark\");\n      dispatch({ type: \"dark_mode\" });\n    } else {\n      localStorage.setItem(\"mode\", \"light\");\n      dispatch({ type: \"light_mode\" });\n    }\n  };\n\n  const [width] = useWindowSize();\n  const [balance, setBalance] = useState([]);\n\n  const algodClient = new algosdk.Algodv2(\n    '', 'https://api.algoexplorer.io', '');\n\n\n  const walletAddress = localStorage.getItem(\"address\");\n  const addresses = localStorage.getItem(\"addresses\")?.split(\",\");\n\n  let addrArr = [];\n\n  useEffect(() => {\n    addresses?.forEach(async (item) => {\n      const myAccountInfo = await algodClient.accountInformation(item).do();\n      const bal =\n        myAccountInfo.assets.find((element) => element[\"asset-id\"] === ASSET_ID)\n          ?.amount / 100;\n\n      addrArr.push({ balance: !!bal ? bal : 0, address: item });\n\n      if (addrArr?.length === addresses?.length) {\n        dispatch({\n          type: \"setAlgoAddress\",\n          addressIndex: 0,\n          addr: addrArr[0]?.address,\n        });\n        setBalance(addrArr);\n      }\n    });\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const myAlgoConnect = async () => {\n    const myAlgoWallet = new MyAlgoConnect({ shouldSelectOneAccount: false });\n\n    try {\n      const accounts = await myAlgoWallet.connect({\n        shouldSelectOneAccount: true,\n      });\n\n      const addresses = accounts.map((item) => item?.address);\n      const address = accounts[0].address;\n\n      // close modal.\n      localStorage.setItem(\"wallet-type\", \"my-algo\");\n      localStorage.setItem(\"address\", address);\n      localStorage.setItem(\"addresses\", addresses);\n\n      window.location.reload();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const connectWallet = () => {\n    const connector = new WalletConnect({\n      bridge: \"https://bridge.walletconnect.org\",\n      qrcodeModal: QRCodeModal,\n    });\n\n    if (!connector.connected) {\n      connector.createSession();\n    }\n\n    connector.on(\"connect\", (error, payload) => {\n      if (error) {\n        throw error;\n      }\n\n      const { accounts } = payload.params[0];\n\n      const addresses = accounts.map((item) => item);\n      const address = accounts[0];\n\n      localStorage.setItem(\"wallet-type\", \"walletconnect\");\n      localStorage.setItem(\"address\", address);\n      localStorage.setItem(\"addresses\", addresses);\n\n      window.location.reload();\n    });\n\n    connector.on(\"session_update\", (error, payload) => {\n      if (error) {\n        throw error;\n      }\n\n      const { accounts } = payload.params[0];\n\n      const addresses = accounts.map((item) => item);\n      const address = accounts[0];\n\n      localStorage.setItem(\"wallet-type\", \"walletconnect\");\n      localStorage.setItem(\"address\", address);\n      localStorage.setItem(\"addresses\", addresses);\n\n      window.location.reload();\n    });\n\n    connector.on(\"disconnect\", (error, payload) => {\n      if (error) {\n        console.log(error);\n      }\n    });\n  };\n\n  const algoSignerConnect = async () => {\n    try {\n      if (typeof window.AlgoSigner === \"undefined\") {\n        window.open(\n          \"https://chrome.google.com/webstore/detail/algosigner/kmmolakhbgdlpkjkcjkebenjheonagdm\",\n          \"_blank\"\n        );\n      } else {\n        await window.AlgoSigner.connect({\n          ledger: \"TestNet\",\n        });\n        const accounts = await window.AlgoSigner.accounts({\n          ledger: \"TestNet\",\n        });\n\n        const addresses = accounts.map((item) => item?.address);\n        const address = accounts[0].address;\n\n        // close modal.\n        localStorage.setItem(\"wallet-type\", \"algosigner\");\n        localStorage.setItem(\"address\", address);\n        localStorage.setItem(\"addresses\", addresses);\n\n        window.location.reload();\n      }\n    } catch (error) {\n      dispatch({\n        type: \"alert_modal\",\n        alertContent: \"AlgoSigner not set up yet!\",\n      });\n    }\n  };\n\n  return (\n    <header className=\"small_header\">\n      <div className=\"small_header_inn\">\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            textTransform: \"uppercase\",\n          }}\n        >\n          Choice Coin\n        </div>\n\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          {!!isWalletConnected ? (\n            <>\n              <div className=\"addrDisplay\">\n                <div className=\"addrDispMain\">\n                  <div className=\"addrDisplayInn\">\n                    <div className=\"addrBalance\">\n                      {balance[addressNum]?.balance} Choice\n                    </div>\n\n                    <CopyToClipboard text={balance[addressNum]?.address}>\n                      <div className=\"addressTxt\">\n                        <p>{balance[addressNum]?.address}</p>\n                        <i className=\"uil uil-copy\"></i>\n                      </div>\n                    </CopyToClipboard>\n                  </div>\n                </div>\n\n                <div className=\"dropDownConnect_items\">\n                  {balance?.map((item, index) => {\n                    return (\n                      <div\n                        key={index}\n                        className=\"dropDownConnect_item\"\n                        onClick={() => {\n                          dispatch({\n                            type: \"setAlgoAddress\",\n                            addressIndex: index,\n                            addr: item.address,\n                          });\n                        }}\n                      >\n                        <p className=\"dropDownConnect_item_txt\">\n                          {item.address}\n                        </p>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            </>\n          ) : (\n            <div className=\"dropDownConnect\">\n              <div className=\"dropDownConnect_button\">\n                <button className=\"connect_wallet_button\">\n                  <p>\n                    Connect Wallet\n                    <i\n                      className=\"uil uil-angle-down\"\n                      style={{ fontSize: \"18px\" }}\n                    />\n                  </p>\n                </button>\n              </div>\n\n              <div className=\"dropDownConnect_items\">\n                <div className=\"dropDownConnect_item\" onClick={myAlgoConnect}>\n                  <div className=\"dropDownConnect_img\">\n                    <img\n                      src=\"https://i.postimg.cc/76r9kXSr/My-Algo-Logo-4c21daa4.png\"\n                      alt=\"\"\n                    />\n                  </div>\n                  <p className=\"dropDownConnect_item_txt\">My Algo Wallet</p>\n                </div>\n\n                <div\n                  className=\"dropDownConnect_item\"\n                  onClick={algoSignerConnect}\n                >\n                  <div className=\"dropDownConnect_img\">\n                    <img\n                      src=\"https://i.postimg.cc/L4JB4JwT/Algo-Signer-2ec35000.png\"\n                      alt=\"\"\n                    />\n                  </div>\n                  <p className=\"dropDownConnect_item_txt\">\n                    {typeof window.AlgoSigner === undefined\n                      ? \"Install AlgoSigner\"\n                      : \"AlgoSigner\"}\n                  </p>\n                </div>\n\n                <div className=\"dropDownConnect_item\" onClick={connectWallet}>\n                  <div className=\"dropDownConnect_img\">\n                    <img\n                      src=\"https://i.postimg.cc/J7JZ4cFb/icon-37675b59-1.png\"\n                      alt=\"\"\n                    />\n                  </div>\n                  <p className=\"dropDownConnect_item_txt\">\n                    Algorand Mobile Wallet\n                  </p>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          fontSize: \"12px\",\n          fontWeight: \"500\",\n          wordSpacing: \"1px\",\n          alignItems: \"center\",\n          color: \"var(--wht)\",\n          padding: \"0px 5vw\",\n          letterSpacing: \"0.5px\",\n          textTransform: \"uppercase\",\n          background: \"var(--background)\",\n          height: \"var(--sm-hd-height-half)\",\n          justifyContent: \"space-between\",\n          borderTop: \"1px solid var(--border-default)\",\n        }}\n      >\n        <p style={{ opacity: \"0.9\" }}>\n          Amount committed to Governance:&nbsp;\n          {!!walletAddress && <GetCommittedAmount />} Choice\n        </p>\n\n        {width > 850 && (\n          <ul className=\"listNavBig\">\n            <li>\n              <NavLink\n                style={({ isActive }) => {\n                  return {\n                    display: \"flex\",\n                    opacity: isActive ? \"1\" : \"0.6\",\n                    alignItems: \"center\",\n                    flexDirection: \"column\",\n                  };\n                }}\n                to={`/`}\n                key={\"home\"}\n              >\n                Home\n              </NavLink>\n            </li>\n\n            <li>\n              <NavLink\n                style={({ isActive }) => {\n                  return {\n                    display: \"flex\",\n                    opacity: isActive ? \"1\" : \"0.6\",\n                    alignItems: \"center\",\n                    flexDirection: \"column\",\n                  };\n                }}\n                to={`/participate`}\n                key={\"participate\"}\n              >\n                Participate\n              </NavLink>\n            </li>\n\n            <li>\n              <NavLink\n                style={({ isActive }) => {\n                  return {\n                    display: \"flex\",\n                    opacity: isActive ? \"1\" : \"0.6\",\n                    alignItems: \"center\",\n                    flexDirection: \"column\",\n                  };\n                }}\n                to={`/faq`}\n                key={\"faq\"}\n              >\n                FAQ\n              </NavLink>\n            </li>\n\n            <li onClick={setMode}>\n              M\n              {darkTheme ? (\n                <i className=\"uil uil-brightness-low\"></i>\n              ) : (\n                <i className=\"uil uil-moon\"></i>\n              )}\n              de\n            </li>\n            <li onClick={LogOut}>Sign Out</li>\n          </ul>\n        )}\n      </div>\n    </header>\n  );\n};\n\nexport default TopNavigationBar;\n","import { useDispatch } from \"react-redux\";\n\nconst BottomNavigationBar = ({ NavLink, darkTheme }) => {\n  const dispatch = useDispatch();\n\n  const LogOut = () => {\n    localStorage.removeItem(\"address\");\n    localStorage.removeItem(\"addresses\");\n    localStorage.removeItem(\"wallet-type\");\n    localStorage.removeItem(\"walletconnect\");\n    window.location.reload();\n  };\n\n  const setMode = () => {\n    if (!darkTheme) {\n      localStorage.setItem(\"mode\", \"dark\");\n      dispatch({ type: \"dark_mode\" });\n    } else {\n      localStorage.setItem(\"mode\", \"light\");\n      dispatch({ type: \"light_mode\" });\n    }\n  };\n\n  return (\n    <footer className=\"ft_sm\">\n      <ul className=\"ft_sm_inn\">\n        <li className=\"ft_sm_li\">\n          <NavLink\n            style={({ isActive }) => {\n              return {\n                display: \"flex\",\n                fontSize: isActive ? \"14px\" : \"13px\",\n                fontWeight: isActive && \"600\",\n                opacity: isActive ? \"1\" : \"0.6\",\n                alignItems: \"center\",\n                flexDirection: \"column\",\n              };\n            }}\n            to={`/`}\n            key={\"home\"}\n          >\n            <i className=\"uil uil-estate\"></i>\n          </NavLink>\n        </li>\n\n        <li className=\"ft_sm_li\">\n          <NavLink\n            style={({ isActive }) => {\n              return {\n                display: \"flex\",\n                fontSize: isActive ? \"14px\" : \"13px\",\n                fontWeight: isActive && \"600\",\n                opacity: isActive ? \"1\" : \"0.6\",\n                alignItems: \"center\",\n                flexDirection: \"column\",\n              };\n            }}\n            to={`/faq`}\n            key={\"faq\"}\n          >\n            {/* <i className=\"uil uil-question-circle\"></i> */}\n            <i className=\"uil uil-list-ui-alt\"></i>\n          </NavLink>\n        </li>\n\n        <li className=\"ft_sm_li\">\n          <NavLink\n            style={({ isActive }) => {\n              return {\n                width: \"35px\",\n                height: \"35px\",\n                display: \"flex\",\n                borderRadius: \"100%\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                fontWeight: isActive && \"600\",\n                background: \"var(--main-col)\",\n                color: !darkTheme ? \"#fff\" : \"\",\n                border: isActive\n                  ? darkTheme\n                    ? \"1px solid var(--wht)\"\n                    : \"1px solid #666\"\n                  : \"none\",\n                fontSize: isActive ? \"14px\" : \"13px\",\n              };\n            }}\n            to={`/participate`}\n            key={\"participate\"}\n          >\n            <i className=\"uil uil-check\"></i>\n          </NavLink>\n        </li>\n\n        <li className=\"ft_sm_li\" onClick={setMode}>\n          <div\n            style={{\n              display: \"flex\",\n              fontSize: \"13px\",\n              opacity: \"0.65\",\n              cursor: \"pointer\",\n              alignItems: \"center\",\n              flexDirection: \"column\",\n            }}\n          >\n            {darkTheme ? (\n              <i\n                className=\"uil uil-brightness-low\"\n                style={{ fontSize: \"21px\" }}\n              ></i>\n            ) : (\n              <i className=\"uil uil-moon\" style={{ fontSize: \"21px\" }}></i>\n            )}\n          </div>\n        </li>\n\n        <li className=\"ft_sm_li\">\n          <div\n            style={{\n              display: \"flex\",\n              fontSize: \"13px\",\n              opacity: \"0.65\",\n              cursor: \"pointer\",\n              alignItems: \"center\",\n              flexDirection: \"column\",\n            }}\n            onClick={LogOut}\n          >\n            <i className=\"uil uil-signout\" style={{ fontSize: \"21px\" }}></i>\n          </div>\n        </li>\n      </ul>\n    </footer>\n  );\n};\n\nexport default BottomNavigationBar;\n","import { useSelector } from \"react-redux\";\nimport Home from \"./Home\";\n\nimport Faq from \"./faq\";\nimport { useWindowSize } from \"@react-hook/window-size\";\nimport { NavLink, Route, Routes } from \"react-router-dom\";\nimport TopNavigationBar from \"./statics/TopNavigationBar\";\nimport BottomNavigationBar from \"./statics/BottomNavigationBar\";\nimport ElectionList from \"./ElectionList\";\n\nconst MainPage = () => {\n  const [width] = useWindowSize();\n  const darkTheme = useSelector((state) => state.status.darkTheme);\n\n  return (\n    <main\n      className={`${\n        darkTheme ? \"dark_theme big_screen\" : \"light_theme big_screen\"\n      }`}\n      id=\"main_main\"\n    >\n      <div\n        style={{\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          content: \"\",\n          width: \"100%\",\n          height: \"100%\",\n          opacity: darkTheme ? 0.088 : 0.078,\n          position: \"fixed\",\n          pointerEvents: \"none\",\n          background: `url(\"./img/background${darkTheme ? \"2\" : \"\"}.svg\")`,\n        }}\n      />\n\n      <TopNavigationBar darkTheme={darkTheme} NavLink={NavLink} />\n\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/faq\" element={<Faq />} />\n        <Route path=\"/home\" element={<Home />} />\n        <Route path=\"/participate\" element={<ElectionList />} />\n      </Routes>\n\n      {width <= 850 && (\n        <BottomNavigationBar NavLink={NavLink} darkTheme={darkTheme} />\n      )}\n    </main>\n  );\n};\n\nexport default MainPage;\n","import { combineReducers } from \"redux\";\n\nconst status = (\n  state = {\n    darkTheme: localStorage.getItem(\"mode\") === \"light\" ? false : true,\n    alertModal: { openModal: false, modalContent: \"\" },\n    electModal: { openElectModal: false, modalData: null },\n    voteModal: { openModalVote: false, voteData: null },\n    addressNum: 0,\n    address: null,\n  },\n  action\n) => {\n  switch (action.type) {\n    case \"setAlgoAddress\":\n      localStorage.setItem(\"address\", `${action?.addr}`);\n      return { ...state, addressNum: action.addressIndex };\n\n    case \"light_mode\":\n      return { ...state, darkTheme: false };\n    case \"dark_mode\":\n      return { ...state, darkTheme: true };\n\n    case \"alert_modal\":\n      return {\n        ...state,\n        alertModal: { openModal: true, modalContent: action.alertContent },\n      };\n\n    case \"close_modal\":\n      return { ...state, alertModal: { openModal: false, modalContent: \"\" } };\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({ status });\n","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nlet initialState = {};\n\nconst store = createStore(rootReducer, initialState);\nexport default store;\n","import { useSelector, useDispatch } from \"react-redux\";\n\nconst AlertModal = () => {\n  const darkTheme = useSelector((state) => state.status.darkTheme);\n\n  const dispatch = useDispatch();\n\n  const { openModal, modalContent } = useSelector(\n    (state) => state.status.alertModal\n  );\n\n  return (\n    <menu\n      className=\"mn_sm\"\n      style={{ display: `${!!openModal ? \"flex\" : \"none\"}` }}\n    >\n      <div className=\"mn_sm_modal\">\n        <div\n          style={{\n            width: \"100%\",\n            display: \"flex\",\n            marginRight: \"10px\",\n            flexDirection: \"row\",\n            justifyContent: \"flex-end\",\n          }}\n        >\n          <div\n            style={{\n              width: \"50px\",\n              height: \"50px\",\n              display: \"flex\",\n              fontSize: \"16px\",\n              cursor: \"pointer\",\n              fontWeight: \"500\",\n              textAlign: \"center\",\n              borderRadius: \"100%\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              textTransform: \"uppercase\",\n              border: \"1px solid var(--l1)\",\n              background: \"var(--main-col)\",\n            }}\n            onClick={() => {\n              dispatch({ type: \"close_modal\" });\n            }}\n          >\n            <i className=\"uil uil-times\"></i>\n          </div>\n        </div>\n\n        <div\n          className=\"mn_sm_modal_inn\"\n          style={{\n            color: darkTheme ? \"#fff\" : \"#000\",\n            background: darkTheme ? \"#4a4a4a\" : \"#f2f2f2\",\n          }}\n        >\n          <>\n            <div\n              style={{\n                minHeight: \"100px\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n              }}\n            >\n              <p\n                style={{\n                  opacity: 0.7,\n                  fontWeight: \"500\",\n                  margin: \"0px 0px 20px\",\n                  padding: \"15px 10px 15px 2px\",\n                  textTransform: \"uppercase\",\n                  borderBottom: `2px solid ${darkTheme ? \"var(--l1)\" : \"#222\"}`,\n                }}\n              >\n                <i className=\"uil uil-exclamation-octagon\"></i> Alert\n              </p>\n              <p\n                style={{\n                  opacity: 0.7,\n                  textAlign: \"center\",\n                  lineHeight: \"25px\",\n                  marginBottom: \"10px\",\n                }}\n              >\n                {modalContent}\n              </p>\n            </div>\n          </>\n        </div>\n      </div>\n    </menu>\n  );\n};\n\nexport default AlertModal;\n","import { Suspense } from \"react\";\nimport MainPage from \"./MainPage\";\nimport stores from \"./store/stores\";\nimport AlertModal from \"./statics/AlertModal\";\nimport { Provider as ReduxProvider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nconst renderLoader = () => <p></p>;\n\nconst App = () => {\n  const queryClient = new QueryClient();\n  return (\n    <Suspense fallback={renderLoader()}>\n      <ReduxProvider store={stores}>\n        <QueryClientProvider client={queryClient}>\n          <Router>\n            <MainPage />\n            <AlertModal />\n          </Router>\n        </QueryClientProvider>\n      </ReduxProvider>\n    </Suspense>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}